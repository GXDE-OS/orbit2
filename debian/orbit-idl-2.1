.\" created for orbit-idl-2 by Chris Waters, for Debian GNU/Linux
.\"
.TH ORBIT-IDL-2 1 "18 March 2002" "Version 0.5.15"

.SH NAME
orbit\-idl\-2 \- IDL compiler for ORBit2

.SH SYNOPSIS
.HP
.B orbit\-idl\-2
.RI "[ " options " ] " file...

.SH DESCRIPTION
.B orbit\-idl\-2
converts object interface descriptions written in CORBA IDL (Interface
Definition Language) into C code that you can compile and link into
your programs.

.SH OPTIONS
.B orbit\-idl\-2
accepts the following options:
.P
.BI "\-d " ARG
.RS 0
.BI \-\-debug= ARG
.RS
Set the debug level.  Supported levels are 0 to 4, default is 2.
.RE
.TP
.BI \-\-idlwarnlevel= INT
Set the warning level for compiler warnings.  Supported levels are 0
to 4, default is 2.
.TP
.B \-\-showcpperrors
Show errors from cpp(1).
.TP
.B \-\-small
Optimize for size instead of speed.
.TP
.B \-\-oldstyle
Use the old style IDL compiler (not generally recommended).
.TP
.B \-\-skeleton\-impl
Generate a \fIskeleton-impl\fP file.
.TP
.B \-\-nostubs
Do not create the \fIstubs\fP file.
.TP
.B \-\-noskels
Do not create the \fIskels\fP file.
.TP
.B \-\-nocommon
Do not create the \fIcommon\fP file.
.TP
.B \-\-noheaders
Do not create the \fIheaders\fP file.
.TP
.B \-\-noidata
Don't generate Interface type data.
.P
.B \-i
.RS 0
.B \-\-imodule
.RS
Generate only an imodule file (no skels, stubs, etc.).
.RE
.TP
.B \-\-add\-imodule
Generate an imodule file (as well as other files generated by default
or by other options).
.TP
.B \-\-onlytop
Inhibit file includes.
.TP
.B \-\-pidl
Treat source as pseudo-IDL.
.P
.BI "\-D " ARG
.RS 0
.BI \-\-define= ARG
.RS
Define name for preprocessor.
.RE
.P
.BI "\-I " PATH
.RS 0
.BI \-\-include= PATH
.RS
Add search path for include files.
.RE
.TP
.BI \-\-deps= FILENAME
Generate dependency information, suitable for inclusion in a Makefile.
.P
.BI "\-l " ARG
.RS 0
.BI \-\-lang= ARG
.RS
Specify the output language.  The default is C.  Support for languages
other than C requires the installation of a backend for that language.
.RE
.TP
.BI "\-\-backenddir=" DIR
Specify the directory where a language backend is stored (not
necessary if backend is stored in the default directory).
.TP
.B "\-\-usage"
Print a very brief usage summary.
.P
.B \-?
.RS 0
.B \-\-help
.RS
Print a slightly more detailed usage summary.
.RE
.P
.B \-v
.RS 0
.B \-\-version
.RS
Print version number and serial.
.RE

.SH COMPILING
The IDL file(s) compiled by \fBorbit\-idl\-2\fP define the interfaces
to network-transparent objects.  These files are first passed to
cpp(1), the C Preprocessor, then the result is parsed, and the C code
is generated.
.P
 By default, \fBorbit\-idl\-2\fP generates four files, the \fIstubs\fP,
\fIskels\fP, \fIcommon\fP, and \fIheader\fP files.  If your input file
is named \fBsample.idl\fP, then the output files will be named,
respectively, \fBsample-stubs.c\fP, \fBsample-skels.c\fP,
\fBsample-common.c\fP, and \fBsample.h\fP.  You can optionally also
generate a \fIskeleton-impl\fP file (which would be named
\fBsample-skelimpl.c\fP in our example), or an \fIimodule\fP file
(e.g. \fBsample-imodule.c\fP).  These files require manual
editing to be useful, and is therefore not generated by default.
.P
The generated C files are formatting ("pretty-printed") using
indent(1).  You can use another program for this if you prefer, with
the \-\-c-output-formatter argument.

.SH SEE ALSO
orbit2-config(1), cpp(1), indent(1), /usr/share/doc/liborbit2-dev,
http://orbit-resource.sourceforge.net, http://www.omg.org.

.SH AUTHOR
Copyright \(co 2001, 2002 Dick Porter <dick@acm.org> and Elliot Lee
<sopwith@redhat.com>

This manual was originally written for orbit-idl by Chris Waters
<xtifr@debian.org> for Debian GNU/Linux.
